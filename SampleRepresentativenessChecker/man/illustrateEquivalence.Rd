% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/illustrate_equivalence.R
\name{illustrateEquivalence}
\alias{illustrateEquivalence}
\title{Illustrates how equivalent the sample (p-hat) is assessed to be relative to the truth (pi)
based on the simultaneous multinomial proportion confidence interval.}
\usage{
illustrateEquivalence(pi, delta, x = NULL, ci = NULL, space = 0.33, ...)
}
\arguments{
\item{pi}{The true, gold-standard probabilities which defines the population characteristics
on d cells and is thus of length d. The resulting illustration will plot these
as blue dots.}

\item{delta}{The practical equivalence tolerance level. This can be a scalar (implying
a d-length vector with the same value) or a vector of length d. The resulting 
illustration will plot this tolerance around pi as black bars.}

\item{x}{The experimental sample consisting of a count vector of length d. The default is
\code{NULL} as this argument is optional. If specified, the sample proportions will
be plotted in the resulting illustration as green dots.}

\item{ci}{The confidence interval for the experiment. This data can be grabbed from the
returned list in \code{runRepresentativenessTest} or it can be generated independently
by using the \code{multinomialCI} function. The default is \code{NULL} as this argument 
is optional. If specified, the interval will be plotted in the resulting illustration as 
red line segments. The representativeness test passes if all these intervals are completed
contained within the black intervals.}

\item{space}{Spacing between bars in the resulting barplot illustration. Default is \code{0.33}.}

\item{...}{Additional arguments to be passed to the \code{barplot} function.}
}
\description{
Illustrates how equivalent the sample (p-hat) is assessed to be relative to the truth (pi)
based on the simultaneous multinomial proportion confidence interval.
}
\examples{
 \dontrun{
	gender = c(0.5, 0.5)
	ethnicity = c(.13, .70, .13, .04)
	age = c(.13, .41, .30, .16)
	region = c(.22, .18, .37, .23)
	# install.packages("tensor")
	library(tensor)
	#vectorize the tensor multiplication
	pi = c(tensor(tensor(tensor(gender, ethnicity), age), region))
	#pretend to collect data
	x = rmultinom(1, 1000, pi)
	delta = 0.03
	res = runRepresentativenessTest(pi, x, delta = delta)
	illustrateEquivalence(pi, delta, x, res$ci)
	}
}
\author{
Adam Kapelner
}

